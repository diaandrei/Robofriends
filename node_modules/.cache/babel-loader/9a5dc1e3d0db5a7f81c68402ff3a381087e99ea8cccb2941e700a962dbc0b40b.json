{"ast":null,"code":"import _classCallCheck from\"C:/Users/diama/robofriends/Robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/diama/robofriends/Robofriends/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/diama/robofriends/Robofriends/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/diama/robofriends/Robofriends/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{connect}from'react-redux';import{setSearchField,requestRobots}from'../actions';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import Scroll from'../components/Scroll';import ErrorBoundry from'../components/ErrorBoundry';import'./App.css';// parameter state comes from index.js provider store state(rootReducers)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapStateToProps=function mapStateToProps(state){return{searchField:state.searchRobots.searchField,robots:state.requestRobots.robots,isPending:state.requestRobots.isPending};};// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSearchChange:function onSearchChange(event){return dispatch(setSearchField(event.target.value));},onRequestRobots:function onRequestRobots(){return dispatch(requestRobots());}};};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.onRequestRobots();}},{key:\"render\",value:function render(){var _this$props=this.props,robots=_this$props.robots,searchField=_this$props.searchField,onSearchChange=_this$props.onSearchChange,isPending=_this$props.isPending;var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchField.toLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:isPending?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsx(ErrorBoundry,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}}]);return App;}(Component);// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","connect","setSearchField","requestRobots","CardList","SearchBox","Scroll","ErrorBoundry","jsx","_jsx","jsxs","_jsxs","mapStateToProps","state","searchField","searchRobots","robots","isPending","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","componentDidMount","props","render","_this$props","filteredRobots","filter","robot","name","toLowerCase","includes","className","children","searchChange"],"sources":["C:/Users/diama/robofriends/Robofriends/src/containers/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nimport './App.css';\r\n\r\n// parameter state comes from index.js provider store state(rootReducers)\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending\r\n  }\r\n}\r\n\r\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\r\n// the function returns an object then uses connect to change the data from redecers.\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField, onSearchChange, isPending } = this.props;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          { isPending ? <h1>Loading</h1> :\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          }\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// action done from mapDispatchToProps will channge state from mapStateToProps\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n"],"mappings":"geAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,OAAO,KAAQ,aAAa,CACrC,OAASC,cAAc,CAAEC,aAAa,KAAQ,YAAY,CAE1D,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CAErD,MAAO,WAAW,CAElB;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,KAAK,CAAK,CACjC,MAAO,CACLC,WAAW,CAAED,KAAK,CAACE,YAAY,CAACD,WAAW,CAC3CE,MAAM,CAAEH,KAAK,CAACV,aAAa,CAACa,MAAM,CAClCC,SAAS,CAAEJ,KAAK,CAACV,aAAa,CAACc,SACjC,CAAC,CACH,CAAC,CAED;AACA;AACA,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIC,QAAQ,CAAK,CACvC,MAAO,CACLC,cAAc,CAAE,SAAAA,eAACC,KAAK,QAAK,CAAAF,QAAQ,CAACjB,cAAc,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,GACvEC,eAAe,CAAE,SAAAA,gBAAA,QAAM,CAAAL,QAAQ,CAAChB,aAAa,EAAE,CAAC,EAClD,CAAC,CACH,CAAC,IAEK,CAAAsB,GAAG,uBAAAC,UAAA,EAAAC,SAAA,CAAAF,GAAA,CAAAC,UAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,GAAA,WAAAA,IAAA,EAAAK,eAAA,MAAAL,GAAA,SAAAG,MAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAC,YAAA,CAAAR,GAAA,GAAAS,GAAA,qBAAAX,KAAA,CACP,SAAAY,kBAAA,CAAoB,CAClB,IAAI,CAACC,KAAK,CAACZ,eAAe,EAAE,CAC9B,CAAC,GAAAU,GAAA,UAAAX,KAAA,CAED,SAAAc,OAAA,CAAS,CACP,IAAAC,WAAA,CAA2D,IAAI,CAACF,KAAK,CAA7DpB,MAAM,CAAAsB,WAAA,CAANtB,MAAM,CAAEF,WAAW,CAAAwB,WAAA,CAAXxB,WAAW,CAAEM,cAAc,CAAAkB,WAAA,CAAdlB,cAAc,CAAEH,SAAS,CAAAqB,WAAA,CAATrB,SAAS,CACtD,GAAM,CAAAsB,cAAc,CAAGvB,MAAM,CAACwB,MAAM,CAAC,SAAAC,KAAK,CAAI,CAC5C,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC9B,WAAW,CAAC6B,WAAW,EAAE,CAAC,CACrE,CAAC,CAAC,CACF,mBACEhC,KAAA,QAAKkC,SAAS,CAAC,IAAI,CAAAC,QAAA,eACjBrC,IAAA,OAAIoC,SAAS,CAAC,IAAI,CAAAC,QAAA,CAAC,aAAW,EAAK,cACnCrC,IAAA,CAACJ,SAAS,EAAC0C,YAAY,CAAE3B,cAAe,EAAE,cAC1CX,IAAA,CAACH,MAAM,EAAAwC,QAAA,CACH7B,SAAS,cAAGR,IAAA,OAAAqC,QAAA,CAAI,SAAO,EAAK,cAC5BrC,IAAA,CAACF,YAAY,EAAAuC,QAAA,cACXrC,IAAA,CAACL,QAAQ,EAACY,MAAM,CAAEuB,cAAe,EAAG,EACvB,EAEV,GACL,CAEV,CAAC,WAAAd,GAAA,GAvBezB,SAAS,EA0B3B;AACA,cAAe,CAAAC,OAAO,CAACW,eAAe,CAAEM,kBAAkB,CAAC,CAACO,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}